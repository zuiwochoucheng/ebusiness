{
  "uid" : "4778b97c016b6b73",
  "name" : "test_login[admin-123-123]",
  "fullName" : "scriptsDir.test_vhr.Test_Vhr#test_login",
  "historyId" : "aeda58cc96980377e1697420b018fe3b",
  "time" : {
    "start" : 1664508215829,
    "stop" : 1664508220320,
    "duration" : 4491
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: assert '登录成功' in '用户名或者密码输入错误，请重新输入!'\n +  where '用户名或者密码输入错误，请重新输入!' = <bound method VhrPage.find_msg of <pageDir.page_vhr_login.VhrPage object at 0x0000029B73DF59C8>>()\n +    where <bound method VhrPage.find_msg of <pageDir.page_vhr_login.VhrPage object at 0x0000029B73DF59C8>> = <pageDir.page_vhr_login.VhrPage object at 0x0000029B73DF59C8>.find_msg",
  "statusTrace" : "self = <scriptsDir.test_vhr.Test_Vhr object at 0x0000029B73DF5388>, un = 'admin'\npw = 123, cd = 123\n\n    @pytest.mark.parametrize(\"un, pw, cd\", ReadYaml().read('login_params.yml'))\n    def test_login(self, un, pw, cd):\n        vhr = VhrPage(self.driver)\n        self.driver.get('http://192.168.1.73:9090/index.html')\n        vhr.text_clear()\n        vhr.send_text(un, pw, cd)  # 可以进行数据驱动实现参数化\n        vhr.login_click()\n        if '登录成功' not in vhr.find_msg():\n            setattr(Faild, \"flag\", True)\n        else:\n            setattr(Faild, \"flag\", False)\n            # global co\n            # co = self.driver.get_cookies()\n            # setattr(Faild, \"cookies\", co)\n>       assert '登录成功' in vhr.find_msg()\nE       AssertionError: assert '登录成功' in '用户名或者密码输入错误，请重新输入!'\nE        +  where '用户名或者密码输入错误，请重新输入!' = <bound method VhrPage.find_msg of <pageDir.page_vhr_login.VhrPage object at 0x0000029B73DF59C8>>()\nE        +    where <bound method VhrPage.find_msg of <pageDir.page_vhr_login.VhrPage object at 0x0000029B73DF59C8>> = <pageDir.page_vhr_login.VhrPage object at 0x0000029B73DF59C8>.find_msg\n\nscriptsDir\\test_vhr.py:27: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "newBroken" : false,
  "newPassed" : false,
  "retriesCount" : 0,
  "retriesStatusChange" : false,
  "beforeStages" : [ {
    "name" : "xunit_setup_class_fixture_Test_Vhr",
    "time" : {
      "start" : 1664508214436,
      "stop" : 1664508215828,
      "duration" : 1392
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0,
    "stepsCount" : 0,
    "hasContent" : false
  } ],
  "afterStages" : [ {
    "name" : "xunit_setup_class_fixture_Test_Vhr::0",
    "time" : {
      "start" : 1664508228170,
      "stop" : 1664508235399,
      "duration" : 7229
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0,
    "stepsCount" : 0,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "parentSuite",
    "value" : "scriptsDir"
  }, {
    "name" : "suite",
    "value" : "test_vhr"
  }, {
    "name" : "subSuite",
    "value" : "Test_Vhr"
  }, {
    "name" : "host",
    "value" : "LAPTOP-AR44K6QB"
  }, {
    "name" : "thread",
    "value" : "32128-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "scriptsDir.test_vhr"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "cd",
    "value" : "123"
  }, {
    "name" : "pw",
    "value" : "123"
  }, {
    "name" : "un",
    "value" : "'admin'"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "4778b97c016b6b73.json",
  "parameterValues" : [ "123", "123", "'admin'" ]
}